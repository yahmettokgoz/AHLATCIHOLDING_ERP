// <auto-generated />
using System;
using HoldingERP.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HoldingERP.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250807180804_AddIdentityTables")]
    partial class AddIdentityTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HoldingERP.Entities.Entities.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OkunduMu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Bildirimler");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departmanlar");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FaturaNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FaturaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KaydedenKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeklifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KaydedenKullaniciId");

                    b.HasIndex("TeklifId")
                        .IsUnique();

                    b.ToTable("Faturalar");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.LogKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Islem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Nesne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NesneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Zaman")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("LogKayitlari");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Onay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime>("OnayTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnayTipi")
                        .HasColumnType("int");

                    b.Property<int>("OnaylayanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("SatinAlmaTalebiId")
                        .HasColumnType("int");

                    b.Property<int?>("TeklifId")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("SatinAlmaTalebiId");

                    b.HasIndex("TeklifId");

                    b.ToTable("Onaylar");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.SatinAlmaTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<int>("TalepEdenKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TalepEdenKullaniciId");

                    b.ToTable("SatinAlmaTalepleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.SatinAlmaTalepUrunu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SatinAlmaTalebiId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SatinAlmaTalebiId");

                    b.HasIndex("UrunId");

                    b.ToTable("SatinAlmaTalepUrunleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lokasyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.StokHareketi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("IslemTuru")
                        .HasColumnType("int");

                    b.Property<int>("IslemiYapanKullaniciId")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SatinAlmaTalebiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId");

                    b.HasIndex("IslemiYapanKullaniciId");

                    b.HasIndex("SatinAlmaTalebiId");

                    b.HasIndex("UrunId");

                    b.ToTable("StokHareketleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IletisimBilgisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tedarikciler");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Teklif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SatinAlmaTalebiId")
                        .HasColumnType("int");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TeklifTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeklifYapanKullaniciId")
                        .HasColumnType("int");

                    b.Property<decimal>("ToplamFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SatinAlmaTalebiId");

                    b.HasIndex("TedarikciId");

                    b.HasIndex("TeklifYapanKullaniciId");

                    b.ToTable("Teklifler");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.TeklifKalem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TeklifId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeklifId");

                    b.HasIndex("UrunId");

                    b.ToTable("TeklifKalemleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("HoldingERP.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int?>("AmirId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AmirId");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HoldingERP.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Bildirim", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", "Kullanici")
                        .WithMany("Bildirimler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Fatura", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", "KaydedenKullanici")
                        .WithMany("GirilenFaturalar")
                        .HasForeignKey("KaydedenKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Entities.Teklif", "Teklif")
                        .WithOne("Fatura")
                        .HasForeignKey("HoldingERP.Entities.Entities.Fatura", "TeklifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KaydedenKullanici");

                    b.Navigation("Teklif");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.LogKaydi", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", "Kullanici")
                        .WithMany("LogKayitlari")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Onay", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany("Onaylar")
                        .HasForeignKey("OnaylayanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Entities.SatinAlmaTalebi", "SatinAlmaTalebi")
                        .WithMany("Onaylar")
                        .HasForeignKey("SatinAlmaTalebiId");

                    b.HasOne("HoldingERP.Entities.Entities.Teklif", "Teklif")
                        .WithMany("Onaylar")
                        .HasForeignKey("TeklifId");

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("SatinAlmaTalebi");

                    b.Navigation("Teklif");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.SatinAlmaTalebi", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", "TalepEdenKullanici")
                        .WithMany("Talepler")
                        .HasForeignKey("TalepEdenKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TalepEdenKullanici");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.SatinAlmaTalepUrunu", b =>
                {
                    b.HasOne("HoldingERP.Entities.Entities.SatinAlmaTalebi", "SatinAlmaTalebi")
                        .WithMany("TalepUrunleri")
                        .HasForeignKey("SatinAlmaTalebiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Entities.Urun", "Urun")
                        .WithMany("TalepUrunleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SatinAlmaTalebi");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Stok", b =>
                {
                    b.HasOne("HoldingERP.Entities.Entities.Urun", "Urun")
                        .WithMany("Stoklar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.StokHareketi", b =>
                {
                    b.HasOne("HoldingERP.Entities.Entities.Fatura", "Fatura")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("FaturaId");

                    b.HasOne("HoldingERP.Entities.Kullanici", "IslemiYapanKullanici")
                        .WithMany("YaptigiStokHareketleri")
                        .HasForeignKey("IslemiYapanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Entities.SatinAlmaTalebi", "SatinAlmaTalebi")
                        .WithMany()
                        .HasForeignKey("SatinAlmaTalebiId");

                    b.HasOne("HoldingERP.Entities.Entities.Urun", "Urun")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");

                    b.Navigation("IslemiYapanKullanici");

                    b.Navigation("SatinAlmaTalebi");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Teklif", b =>
                {
                    b.HasOne("HoldingERP.Entities.Entities.SatinAlmaTalebi", "SatinAlmaTalebi")
                        .WithMany("Teklifler")
                        .HasForeignKey("SatinAlmaTalebiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Entities.Tedarikci", "Tedarikci")
                        .WithMany("Teklifler")
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Kullanici", "TeklifYapanKullanici")
                        .WithMany("GirilenTeklifler")
                        .HasForeignKey("TeklifYapanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SatinAlmaTalebi");

                    b.Navigation("Tedarikci");

                    b.Navigation("TeklifYapanKullanici");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.TeklifKalem", b =>
                {
                    b.HasOne("HoldingERP.Entities.Entities.Teklif", "Teklif")
                        .WithMany("TeklifKalemleri")
                        .HasForeignKey("TeklifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Entities.Urun", "Urun")
                        .WithMany("TeklifKalemleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teklif");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("HoldingERP.Entities.Kullanici", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", "Amir")
                        .WithMany()
                        .HasForeignKey("AmirId");

                    b.HasOne("HoldingERP.Entities.Entities.Departman", "Departman")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amir");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("HoldingERP.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("HoldingERP.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoldingERP.Entities.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("HoldingERP.Entities.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Departman", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Fatura", b =>
                {
                    b.Navigation("StokHareketleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.SatinAlmaTalebi", b =>
                {
                    b.Navigation("Onaylar");

                    b.Navigation("TalepUrunleri");

                    b.Navigation("Teklifler");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Tedarikci", b =>
                {
                    b.Navigation("Teklifler");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Teklif", b =>
                {
                    b.Navigation("Fatura")
                        .IsRequired();

                    b.Navigation("Onaylar");

                    b.Navigation("TeklifKalemleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Entities.Urun", b =>
                {
                    b.Navigation("StokHareketleri");

                    b.Navigation("Stoklar");

                    b.Navigation("TalepUrunleri");

                    b.Navigation("TeklifKalemleri");
                });

            modelBuilder.Entity("HoldingERP.Entities.Kullanici", b =>
                {
                    b.Navigation("Bildirimler");

                    b.Navigation("GirilenFaturalar");

                    b.Navigation("GirilenTeklifler");

                    b.Navigation("LogKayitlari");

                    b.Navigation("Onaylar");

                    b.Navigation("Talepler");

                    b.Navigation("YaptigiStokHareketleri");
                });
#pragma warning restore 612, 618
        }
    }
}
